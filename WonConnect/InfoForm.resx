<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel_author_image.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="textbox_information.Text" xml:space="preserve">
    <value>WonConnect est un outlis de connection automatique pour vos comptes Way of Naruto. 

Ajoutez des utilisateurs dans le menu + et le logiciel se charge ensuite du cycle des connexions pour vous. 

Vous pouvez vous-même changer l'interval du cycle depuis le menu Options. Si un de vos noms d'utilisateurs ou mot de passe contient le caractère de séparation ' , ' vous pouvez aussi changer ce caractère dans le menu Options.</value>
  </data>
</root>